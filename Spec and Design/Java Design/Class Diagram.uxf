<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;626&lt;/x&gt;&lt;y&gt;0&lt;/y&gt;&lt;w&gt;1020&lt;/w&gt;&lt;h&gt;1220&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;Back End
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;624&lt;/x&gt;&lt;y&gt;0&lt;/y&gt;&lt;w&gt;990&lt;/w&gt;&lt;h&gt;890&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;Back End
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;0&lt;/x&gt;&lt;y&gt;106&lt;/y&gt;&lt;w&gt;580&lt;/w&gt;&lt;h&gt;590&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;Front End
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;20&lt;/x&gt;&lt;y&gt;230&lt;/y&gt;&lt;w&gt;590&lt;/w&gt;&lt;h&gt;490&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;FrontEnd
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>47</x><y>440</y><w>210</w><h>100</h></coordinates><panel_attributes>FrontendController
--
Responsibilities
-- Main program loop
-- Handles user interaction and
manages interactions with classes</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1097</x><y>930</y><w>210</w><h>90</h></coordinates><panel_attributes>ShoppingBasket
--
Responsibilities
-- Manages ticket objects for the user
-- Contains ArrayList of ticket ID's that
the user has in their basket</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>27</x><y>590</y><w>210</w><h>80</h></coordinates><panel_attributes>InterfaceController
--
Responsibilities
-- Formats and draws user interface
(Screens)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>47</x><y>250</y><w>210</w><h>100</h></coordinates><panel_attributes>Scanner
--
Responsibilities
-- Parsing user inputs
-- Uses scanner to read text from user
-- Checks for SQL Injection attempts</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1187</x><y>710</y><w>220</w><h>210</h></coordinates><panel_attributes>DatabaseConnector
--
Variables
- databaseLocation : String
- username : String
- password : String
--
Methods
+ runQuery(query)
--
Responsibilities
-- Connects to the database
-- Runs queries
-- Returns Result List to Controller</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1077</x><y>620</y><w>180</w><h>70</h></coordinates><panel_attributes>StatementBuilder
--
Responsibilities
-- Builds Prepared Statements
   for each of the searches</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>667</x><y>630</y><w>310</w><h>550</h></coordinates><panel_attributes>BackendController
--
Methods
- processResultList(ResultList result)
+ createNewUser()
+ getShowsFromTitle(searchTerm)
+ getAllShows()
+ getShowsFromProductionID(productionID)
+ getAllPerformances()
+ getShowsFromType(searchTerm)
+ getShowsFromTime(searchTerm)
+ getShowsFromDate(date)
+ getShowsMaxDuration(maxDuration)
+ addTicketToBasket(show, seatLocation)
+ purchaseTicekt(basket, userDetails)
- findPerformers(performanceID)
- findPerformersID(performanceID)
- getAvailableTickets(location, performanceID)
- isPerformerProduction(performerID, performanceID)
- isPerformerMusikc(performerID, perfomanceID)
- addProductionRoles(performer, performanceID)
- addMusicRoles(performer, performanceID)
- getPriceArrayLIst(performanceID)
- getBasePrice(perofrmanceID)
- buildPerformanceReturn()
- getConcessionMultiplier(concessionID)
+ removeFromBasket(user, performanceID, seatID)
+ removeAllFromBasket(User)
+ checkoutBasket(User, creditCard)
+ getBasket(user)
+ addToBasket(concessionID, performanceID,
                              user, qty, location)
--
Responsibilities
-- Handles Front End requests
-- Front facing access for Front End
to obtain information from database
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>117</x><y>340</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>967</x><y>1030</y><w>150</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;130;40</additional_attributes></element><element><id>Relation</id><coordinates><x>107</x><y>530</y><w>50</w><h>80</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>30;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>247</x><y>510</y><w>440</w><h>220</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;420;200</additional_attributes></element><element><id>Relation</id><coordinates><x>967</x><y>850</y><w>240</w><h>50</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;220;22</additional_attributes></element><element><id>UMLClass</id><coordinates><x>688</x><y>180</y><w>210</w><h>390</h></coordinates><panel_attributes>performance
--
- performanceID : int
- title : String
- type : showType
- description : String
- time : String
- date : String
- duration : int
- price : double
- stallsAvailable : int
- circleAvailable : int
--
+ getTitle()
+ getType()
+ getDescription()
+ getTime()
+ getDate()
+ getDuration()
+ getPrice()
+ getStallsAvailable()
+ getCircleAvailable()
--
Build show object by passing all
fields to the Constructor

Duration in minutes
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>778</x><y>560</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;70;20;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>938</x><y>280</y><w>210</w><h>120</h></coordinates><panel_attributes>concert
--
- performers : ArrayList&lt;performer&gt;
--
+ getPerformers()
+ addPerformer(Performer)
--
Build object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>958</x><y>390</y><w>140</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>120;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1278</x><y>280</y><w>210</w><h>130</h></coordinates><panel_attributes>nonConcertWithMusic
--
- performers : ArrayList&lt;performer&gt;
- language : String
--
+ getPerformers()
+ getLanguage()
--
Build object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1248</x><y>400</y><w>50</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;30;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1048</x><y>450</y><w>210</w><h>120</h></coordinates><panel_attributes>showType
--
- type : String
--
+ getType()
--
Build showType object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>887</x><y>520</y><w>180</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;160;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1088</x><y>140</y><w>210</w><h>110</h></coordinates><panel_attributes>performer
--
- name : String
--
+ getName()
--
Build performer object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1077</x><y>240</y><w>40</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;40;20;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1247</x><y>240</y><w>50</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>30;40;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>288</x><y>160</y><w>210</w><h>210</h></coordinates><panel_attributes>user
--
- name : String
- addressLine1 : String //
- addressLine2 : String //
- postcode : String //
- creditCard : String //
--
When placing an order a user object
is passed to the database along
with the purchase details

user object created only when 
purchase is made</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>247</x><y>360</y><w>150</w><h>100</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;80;130;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1488</x><y>832</y><w>140</w><h>70</h></coordinates><panel_attributes>DATABASE
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1397</x><y>840</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;90;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>94</y><w>580</w><h>640</h></coordinates><panel_attributes>Front End
--
bg=black</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>967</x><y>650</y><w>130</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;40;110;12</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1097</x><y>1040</y><w>180</w><h>70</h></coordinates><panel_attributes>StringFormatter
--
Responsibilities
-- Formats strings ready for
    return to the front end</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>967</x><y>920</y><w>150</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;130;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1097</x><y>1130</y><w>180</w><h>70</h></coordinates><panel_attributes>InputValidator
--
Responsibilities
-- Validates that user inputs
    are correct and reasonable</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>967</x><y>1130</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;130;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>636</x><y>100</y><w>1020</w><h>1120</h></coordinates><panel_attributes>Back End
--
bg=black</panel_attributes><additional_attributes></additional_attributes></element></diagram>