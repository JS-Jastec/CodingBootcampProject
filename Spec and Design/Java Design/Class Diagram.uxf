<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;0&lt;/x&gt;&lt;y&gt;106&lt;/y&gt;&lt;w&gt;580&lt;/w&gt;&lt;h&gt;590&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;Front End
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;&lt;diagram program="umletino" version="14.4.0-SNAPSHOT"&gt;&lt;zoom_level&gt;10&lt;/zoom_level&gt;&lt;element&gt;&lt;id&gt;UMLPackage&lt;/id&gt;&lt;coordinates&gt;&lt;x&gt;20&lt;/x&gt;&lt;y&gt;230&lt;/y&gt;&lt;w&gt;590&lt;/w&gt;&lt;h&gt;490&lt;/h&gt;&lt;/coordinates&gt;&lt;panel_attributes&gt;FrontEnd
--
bg=black&lt;/panel_attributes&gt;&lt;additional_attributes&gt;&lt;/additional_attributes&gt;&lt;/element&gt;&lt;/diagram&gt;Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>47</x><y>348</y><w>210</w><h>100</h></coordinates><panel_attributes>Main
--
Responsibilities
-- Main program loop
-- Handles user interaction and
manages interactions with classes</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>317</x><y>328</y><w>210</w><h>90</h></coordinates><panel_attributes>ShoppingBasket
--
Responsibilities
-- Manages ticket objects for the user
-- Ensures "locked" tickets unlock</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>97</x><y>498</y><w>210</w><h>80</h></coordinates><panel_attributes>InterfaceController
--
Responsibilities
-- Formats and draws user interface
(Screens)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>47</x><y>158</y><w>210</w><h>100</h></coordinates><panel_attributes>Scanner
--
Responsibilities
-- Parsing user inputs
-- Uses scanner to read text from user
-- Checks for SQL Injection attempts</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1217</x><y>548</y><w>220</w><h>210</h></coordinates><panel_attributes>DatabaseConnector
--
Variables
- databaseLocation : String
- username : String
- password : String
--
Methods
+ runQuery(query)
--
Responsibilities
-- Connects to the database
-- Runs queries
-- Returns Result List to Controller</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>947</x><y>578</y><w>230</w><h>290</h></coordinates><panel_attributes>QueryController
--
Variables
- query : String
--
Methods
+ buildSearchQuery(String searchTerm)
+ buildAddToBasket(int showID, 
String seatLocation)
+ buildPurchaseTicket(Basket basket)
+ buildSearchQuery(searchTerm)
+ buildReserveTicket(query)
+ buildUpdateQuery()
--
Responsibilities
-- Builds Query Strings and uses
DatabaseConnector to run query
-- Checks for SQL Injection
Comments
-- All seasrches return results list</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>657</x><y>568</y><w>230</w><h>290</h></coordinates><panel_attributes>BackendController
--
Methods
- updateFromDB()
- processResultList(ResultList result)
+ getShowsFromTitle(searchTerm)
+ getShowsFromType(searchTerm)
+ getShowsFromTime(searchTerm)
+ getShowsFromDate(searchTerm)
+ getShowsMaxDuration(searchTerm)
+ addTicketToBasket(show, seatLocation)
+ purchaseTicekt(basket, userDetails)
--
Responsibilities
-- Manages ArrayList of Database
Objects (Shows, Seats, User)
-- Handles Front End requests
-- Front facing access for Front End
to obtain information from database
-- Stay updated with Database
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>117</x><y>248</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>247</x><y>368</y><w>90</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;20;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>127</x><y>438</y><w>80</w><h>80</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;60;60</additional_attributes></element><element><id>Relation</id><coordinates><x>247</x><y>418</y><w>430</w><h>270</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;410;250</additional_attributes></element><element><id>Relation</id><coordinates><x>877</x><y>718</y><w>90</w><h>50</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;30;70;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>658</x><y>128</y><w>210</w><h>390</h></coordinates><panel_attributes>performance
--
- performanceID : int
- title : String
- type : showType
- description : String
- time : String
- date : String
- duration : int
- price : double
- stallsAvailable : int
- circleAvailable : int
--
+ getTitle()
+ getType()
+ getDescription()
+ getTime()
+ getDate()
+ getDuration()
+ getPrice()
+ getStallsAvailable()
+ getCircleAvailable()
--
Build show object by passing all
fields to the Constructor

Duration in minutes
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>748</x><y>508</y><w>40</w><h>80</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>20;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>928</x><y>198</y><w>210</w><h>100</h></coordinates><panel_attributes>concert
--
- performers : ArrayList&lt;performer&gt;
--
+ getPerformers()
--
Build object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>948</x><y>288</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;70;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1178</x><y>188</y><w>210</w><h>130</h></coordinates><panel_attributes>nonConcertWithMusic
--
- performers : ArrayList&lt;performer&gt;
- language : String
--
+ getPerformers()
+ getLanguage()
--
Build object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1138</x><y>308</y><w>60</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;40;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>938</x><y>358</y><w>210</w><h>120</h></coordinates><panel_attributes>showType
--
- type : String
--
+ getType()
--
Build showType object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>857</x><y>438</y><w>100</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;20;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1028</x><y>48</y><w>210</w><h>110</h></coordinates><panel_attributes>performer
--
- name : String
--
+ getName()
--
Build performer object by passing all
fields to the Constructor
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1007</x><y>148</y><w>50</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;50;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1187</x><y>148</y><w>50</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>30;40;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>622</x><y>0</y><w>850</w><h>890</h></coordinates><panel_attributes>Back End
--
bg=black</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>338</x><y>38</y><w>210</w><h>210</h></coordinates><panel_attributes>user
--
- name : String
- addressLine1 : String
- addressLine2 : String
- postcode : String
- creditCard : String
--
When placing an order a user object
is passed to the database along
with the purchase details

user object created only when 
purchase is made</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>397</x><y>238</y><w>50</w><h>110</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;90;30;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1278</x><y>800</y><w>140</w><h>70</h></coordinates><panel_attributes>DATABASE
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1317</x><y>748</y><w>50</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;30;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1167</x><y>628</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;50;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>2</y><w>580</w><h>640</h></coordinates><panel_attributes>Front End
--
bg=black</panel_attributes><additional_attributes></additional_attributes></element></diagram>